plugins {
    id("maven-publish")
}

apply from: '../build.common.gradle'
apply from: '../build.dependencies.gradle'

android {
    namespace = 'com.epra.epralib.ftclib'

    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
        }
    }

    buildFeatures {
        buildConfig true
    }
}

// Manually create tasks to generate Javadoc and package it, along with sources
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.getSourceFiles()
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            // Set the classpath for the javadoc task from the release variant
            classpath = variant.javaCompileProvider.get().classpath
        }
    }
    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

dependencies {
    compileOnly 'org.firstinspires.ftc:RobotCore:10.0.0'
    compileOnly 'org.firstinspires.ftc:Hardware:10.0.0'
    compileOnly 'org.firstinspires.ftc:FtcCommon:10.0.0'
}

group = 'com.epra.epralib'
version = '1.3.1'

publishing {
    publications {
        gpr(MavenPublication) {
            groupId = 'com.epra.epralib'
            artifactId = project.name.toLowerCase()
            version = project.version

            // Defer the task lookup until after the project has been evaluated
            // to ensure the 'bundleReleaseAar' task exists.
            afterEvaluate {
                artifact(tasks.getByName("bundleReleaseAar"))
            }

            // Add the sources and javadoc jars as additional artifacts
            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            name = "epralib"
            url = uri("https://maven.pkg.github.com/mallratsftc01/EPRALib")
            credentials {
                username = project.findProperty("gpr.user") ?: ("mallratsftc01")
                password = project.findProperty("gpr.key") ?: ("key")
            }
        }
    }
}